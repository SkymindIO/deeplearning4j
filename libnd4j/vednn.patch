
--- src/cpu/CMakeLists.txt	2021-12-03 07:34:32.322352295 +0900
+++ src/cpu/CMakeLists_new.txt	2021-12-03 05:13:24.026579909 +0900
@@ -146,6 +146,10 @@
     # nc++ "compiler error" if use -mvector-intrinsic-check option [append default option]
     set_source_files_properties(${FILES_NO_VECTOR_INTRINSIC_CHECK}
         PROPERTIES COMPILE_FLAGS "-mno-vector-intrinsic-check")
+
+    #disable inlining for certain files
+    set_source_files_properties(${CMAKE_CURRENT_SOURCE_DIR}/ve/ref_lrn.cpp 
+        PROPERTIES COMPILE_FLAGS "-fno-inline-functions")
 endif()
 
 if(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
--- src/cpu/simple_q10n.hpp	2021-12-06 04:44:23.166824100 +0400
+++ src/cpu/simple_q10n_new.hpp	2021-12-06 08:07:01.116980900 +0400
@@ -36,7 +36,7 @@
 namespace cpu {
 
 /** rounds @p f to an integer according to the mxcsr register */
-inline int mxcsr_round __attribute__((always_inline)) (float const f) ATTR_NO_MSAN {
+inline int mxcsr_round  (float const f) ATTR_NO_MSAN {
 #if DNNL_X64
     return _mm_cvtss_si32(_mm_load_ss(&f));
 #elif defined(__ve)
--- CMakeLists.txt	2021-12-19 07:11:36.895577046 +0900
+++ CmakeList_new.txt	2021-12-19 07:13:33.562851404 +0900
@@ -110,6 +110,9 @@
     # -O4 fails a few benchdnn accuracy tests
     # nc++-3.0.27 -O4 -g -DNDEBUG --> ccom SEGV for benchdnn/nnorm/ref_lnorm.cpp
     #    but -O3 -DNDEBUG is OK ... -O4 -mno-check-vector-intrinsics seems OK
+    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -include stdint.h -DCBLAS_LAYOUT=CBLAS_ORDER  -pthread")
+    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -minit-stack=zero -Wunknown-pragma  -O3 -finline -finline-functions -DDNNL_ARCH_VE")
+    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -finline-max-function-size=300 -finline-max-depth=10 -finline-max-times=20")
     #set(NECVE_FULLOPT "") # -O4 or such is better to set early in command line (in build.sh)
     #set(CMAKE_C_FLAGS_RELEASE_INIT "${NECVE_FULL_OPT} -DNDEBUG")
     #set(CMAKE_CXX_FLAGS_RELEASE_INIT "${NECVE_FULL_OPT} -DNDEBUG")
@@ -200,5 +203,5 @@
     # -O2 is default.  -O3 and -O4 add dangerous optimizations
     #set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O4 -g -DNDEBUG")
     #set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O4 -g -DNDEBUG")
-    show_cmake_stuff("End cmake configuration")
+    #show_cmake_stuff("End cmake configuration")
 endif()

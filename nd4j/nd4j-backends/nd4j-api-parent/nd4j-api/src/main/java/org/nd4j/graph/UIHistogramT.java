/*
 * ******************************************************************************
 *
 *
 * This program and the accompanying materials are made available under the
 * terms of the Apache License, Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0.
 *
 *  See the NOTICE file distributed with this work for additional
 *  information regarding copyright ownership.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/


// automatically generated by the FlatBuffers compiler, do not modify

package org.nd4j.graph;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class UIHistogramT {
  private byte type;
  private long numbins;
  private org.nd4j.graph.FlatArrayT binranges;
  private org.nd4j.graph.FlatArrayT y;
  private String[] binlabels;

  public byte getType() { return type; }

  public void setType(byte type) { this.type = type; }

  public long getNumbins() { return numbins; }

  public void setNumbins(long numbins) { this.numbins = numbins; }

  public org.nd4j.graph.FlatArrayT getBinranges() { return binranges; }

  public void setBinranges(org.nd4j.graph.FlatArrayT binranges) { this.binranges = binranges; }

  public org.nd4j.graph.FlatArrayT getY() { return y; }

  public void setY(org.nd4j.graph.FlatArrayT y) { this.y = y; }

  public String[] getBinlabels() { return binlabels; }

  public void setBinlabels(String[] binlabels) { this.binlabels = binlabels; }


  public UIHistogramT() {
    this.type = 0;
    this.numbins = 0L;
    this.binranges = null;
    this.y = null;
    this.binlabels = null;
  }
}


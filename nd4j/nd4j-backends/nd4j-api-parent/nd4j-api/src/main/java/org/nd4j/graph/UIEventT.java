/*
 * ******************************************************************************
 *
 *
 * This program and the accompanying materials are made available under the
 * terms of the Apache License, Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0.
 *
 *  See the NOTICE file distributed with this work for additional
 *  information regarding copyright ownership.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/


// automatically generated by the FlatBuffers compiler, do not modify

package org.nd4j.graph;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class UIEventT {
  private byte eventType;
  private byte eventSubType;
  private int nameIdx;
  private long timestamp;
  private int iteration;
  private int epoch;
  private short variableId;
  private org.nd4j.graph.FrameIterationT frameIter;
  private int plugin;

  public byte getEventType() { return eventType; }

  public void setEventType(byte eventType) { this.eventType = eventType; }

  public byte getEventSubType() { return eventSubType; }

  public void setEventSubType(byte eventSubType) { this.eventSubType = eventSubType; }

  public int getNameIdx() { return nameIdx; }

  public void setNameIdx(int nameIdx) { this.nameIdx = nameIdx; }

  public long getTimestamp() { return timestamp; }

  public void setTimestamp(long timestamp) { this.timestamp = timestamp; }

  public int getIteration() { return iteration; }

  public void setIteration(int iteration) { this.iteration = iteration; }

  public int getEpoch() { return epoch; }

  public void setEpoch(int epoch) { this.epoch = epoch; }

  public short getVariableId() { return variableId; }

  public void setVariableId(short variableId) { this.variableId = variableId; }

  public org.nd4j.graph.FrameIterationT getFrameIter() { return frameIter; }

  public void setFrameIter(org.nd4j.graph.FrameIterationT frameIter) { this.frameIter = frameIter; }

  public int getPlugin() { return plugin; }

  public void setPlugin(int plugin) { this.plugin = plugin; }


  public UIEventT() {
    this.eventType = 0;
    this.eventSubType = 0;
    this.nameIdx = 0;
    this.timestamp = 0L;
    this.iteration = 0;
    this.epoch = 0;
    this.variableId = 0;
    this.frameIter = null;
    this.plugin = 0;
  }
}

